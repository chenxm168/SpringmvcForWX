package xm.ftp;

import org.apache.commons.net.ftp.FTPClient;
import org.apache.commons.net.ftp.FTPReply;
import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;

public class FtpSrv {

	private Logger log = LogManager.getLogger(FtpSrv.class);

	
	private String hostIp;
	private int hostPort = 21;
	private String userName;
	private String password;
	
	private FTPClient ftp = null;

	public boolean isConnected() {
		return ftp.isConnected();
	}



	public String getHostIp() {
		return hostIp;
	}

	public void setHostIp(String hostIp) {
		this.hostIp = hostIp;
	}

	public int getHostPort() {
		return hostPort;
	}

	public void setHostPort(int hostPort) {
		this.hostPort = hostPort;
	}

	public String getUserName() {
		return userName;
	}

	public void setUserName(String userName) {
		this.userName = userName;
	}

	public String getPassword() {
		return password;
	}

	public void setPassword(String password) {
		this.password = password;
	}
	
	public FtpSrv()
	{
		ftp=new FTPClient();
		try {
			
		} catch (Exception e) {
			// TODO: handle exception
		}
	}

	public boolean Connect() {
		

		return this.Connect(this.hostIp, this.hostPort, this.userName, this.password);
	}
	
	public boolean Connect(String hostip,int port,String user,String pwd) {
		boolean rtn=false;
		try {
			ftp.connect(hostip, port);
			
			ftp.login(user, pwd);
			
            ftp.setConnectTimeout(50000);
            // 设置中文编码集，防止中文乱码
            ftp.setControlEncoding("UTF-8");
            if (!FTPReply.isPositiveCompletion(ftp.getReplyCode())) {
                log.info("未连接到FTP，用户名或密码错误");
                ftp.disconnect();
            } else {
            	log.info("FTP连接成功");
            	rtn=true;
            }
			
		} catch (Exception e) {
			log.error(e.getMessage(),e);
		}
		
		return rtn;
	}
	
	public void Disconnect() {
		try {
			if(ftp!=null)
			{
				ftp.disconnect();
			}
			
		} catch (Exception e) {
			log.error(e.getMessage(),e);
		}

		
	}

}
